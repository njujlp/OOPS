/*
 * (C) Copyright 2009-2016 ECMWF.
 * 
 * This software is licensed under the terms of the Apache Licence Version 2.0
 * which can be obtained at http://www.apache.org/licenses/LICENSE-2.0. 
 * In applying this licence, ECMWF does not waive the privileges and immunities 
 * granted to it by virtue of its status as an intergovernmental organisation nor
 * does it submit to any jurisdiction.
 */

#ifndef DOCUMENTS_MAINPAGE_H_
#define DOCUMENTS_MAINPAGE_H_

// This file defines what appears on the Main Page of the documentation
// generated by doxygen. The file contains no code, and does not appear
// in any cpp include statement.
//
/*!
 * \mainpage Object-Oriented Prediction System
 *
 * \section IntroSection Introduction
 * Welcome to the documentation for the Object-Oriented Prediction
 * System (OOPS).
 *
 * OOPS consists of three layers. The top layer is written in C++, and
 * defines a set of abstract (polymorphic) objects that are used to
 * define the data assimilation algorithm.
 * Below the abstract layer, we have concrete definitions for different
 * models, also written in C++. Below this layer, is a set of Fortran
 * routines that perform the computational, array-based tasks.
 *
 * \subsection TheModelsSubSection The Models
 * Currently, the following models are available:
 * - The Lorenz 1995 (40-variable) model.
 * - A two-layer quasi-geostrophic model.
 *
 * \subsection WhereToStartSubSection Where to Start
 * The general design of OOPS is described in the
 * \link Overview Overview\endlink documents.
 *
 * The following function implements incremental weak-constraint 4d-Var,
 * and may be a suitable starting point for exploring the code:
 * - runVariational.h
 *
 *   Instructions for running the models can be found in the
 *   \link README README\endlink file.
 *
 */
#endif  // DOCUMENTS_MAINPAGE_H_
